{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","newFilm","setnewFilm","count","addNewFilm","newFilmAdd","preventDefault","disabled","onClick","App","moviesFromServer","setMovie","newMovie","addNewMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6de7720.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(value === '')}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd?: (newMovie: Movie) => void,\n}\n\nexport const NewMovie: React.FC<Props> = ({\n  onAdd = () => {},\n}) => {\n  const [newFilm, setnewFilm] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [count] = useState(0);\n\n  const clearFields = () => {\n    setnewFilm({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const areFieldsFilled = () => {\n    return (newFilm.title) && (newFilm.imgUrl)\n    && (newFilm.imdbUrl) && (newFilm.imdbId);\n  };\n\n  const addNewFilm = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    const newFilmAdd: Movie = {\n      title: newFilm.title,\n      description: newFilm.description,\n      imgUrl: newFilm.imgUrl,\n      imdbUrl: newFilm.imdbUrl,\n      imdbId: newFilm.imdbId,\n    };\n\n    event.preventDefault();\n\n    clearFields();\n\n    return newFilmAdd;\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newFilm.title}\n        onChange={(value) => {\n          setnewFilm({\n            ...newFilm,\n            title: value,\n          });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newFilm.description}\n        onChange={(value) => {\n          setnewFilm({\n            ...newFilm,\n            description: value,\n          });\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newFilm.imgUrl}\n        onChange={(value) => {\n          setnewFilm({\n            ...newFilm,\n            imgUrl: value,\n          });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newFilm.imdbUrl}\n        onChange={(value) => {\n          setnewFilm({\n            ...newFilm,\n            imdbUrl: value,\n          });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newFilm.imdbId}\n        onChange={(value) => {\n          setnewFilm({\n            ...newFilm,\n            imdbId: value,\n          });\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={!areFieldsFilled()}\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={(event) => {\n              onAdd(addNewFilm(event));\n            }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movie, setMovie] = useState(moviesFromServer);\n\n  function addNewMovie(newMovie: Movie) {\n    setMovie([\n      ...movie,\n      newMovie,\n    ]);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movie} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(newMovie) => {\n            addNewMovie(newMovie);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}